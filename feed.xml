<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebSiteOps</title>
    <description>The Website Ops blog.</description>
    <link>https://www.websiteops.com/</link>
    <atom:link href="https://www.websiteops.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 26 Aug 2016 00:20:39 -0400</pubDate>
    <lastBuildDate>Fri, 26 Aug 2016 00:20:39 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Connecting AWS Regions with Openswan</title>
        <description>&lt;p&gt;Connected AWS regions is not as simple as it should be. Hopefully AWS will someday provide a VPC Peering connection between regions but until then we need to connect regions with EC2 instances. A couple of techniques we have read up on were using 2 EC2 instances. One in the West region connecting to the East region. In another white paper we found Connecting Multiple VPCs with Astaro Security Gateway https://aws.amazon.com/articles/1909971399457482. This worked ok for a while, but seemed to be expensive and not as performant as it should be. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;For a number of reason the Sophos instances from the AWS MarketPlace no longer kept up with what we needed.
- They were built on PV and not HVM. This limited the type of instances we could us.
- Support is limited to the forums unless you pay a additional fee for vendor
- HA inside of AWS is not a options on the Sophos platform
- Scripting of HA is limited to outside of the Sophos instances using health check for yet another instance.
- No ability to enable AWS enhanced networking&lt;/p&gt;

&lt;p&gt;Enhanced network is support for SR-IOV, which is short lets a single physical Ethernet adapter show up as multiple adapters and the Hypervisor and thus your EC2 instance does not need as much CPU to push the same amount of network traffic. My understanding is it is like a TCP offload engine for virtualization. Less interrupts are use for networking and can be freed up for your app.
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html&lt;/p&gt;

&lt;p&gt;If you are not passing very much traffic over the VPN connection you can start with a small instance. As soon as you need to do something like replication a database over VPN connection you will need to start increasing the size of your instance. http://aws.amazon.com/ec2/instance-types/
I have yet to find documented with the instance types and Network Performance what High, Moderate and Low equates to in bits/sec. The rule of thumb I use is High is about 1Gb/sec and then 1/2 the network speed as the instance size decrease.
I have also been bit by relying on m3.medium instances too many times and getting poor network performance and ultimately having to re-size up to a larger instance like a c4.large&lt;/p&gt;

&lt;p&gt;Now that we have the instance type squared away. We have decided to use Amazon Linux with enhanced networking enabled. Next I am going to choose the IPsec server. For this I choose Openswan. Simply because I have much more experience with Openswan than any of the other services.
To get Openswan installed on Amazon Linux:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum update
yum install openswan&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From here I am going to attach this EC2 instance running Openswan in the West to the AWS VPC VPN in the East. Generate you VPN config in the AWS Console on the East coast. For this instance I am using static routing and download the generic VPN config.
Because the AWS settings are static and AWS generates the PSK for you from here it is pretty straight forward. You just need to set the Openswan connection config to match AWS:&lt;/p&gt;

&lt;p&gt;Here is the secret sauce in Openswan&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;conn west-2-east&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;type=tunnel&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;authby=secret&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;left=instance_ip&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;leftid=elastic_ip&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;leftnexthop=%defaultroute&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;leftsubnet=west_coast_subnet&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;right=vpg_ip&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;rightnexthop=%defaultroute&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;rightsubnet=east_coast_subnet&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;phase2=esp&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;phase2alg=aes128-sha1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ike=aes128-sha1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;ikelifetime=28800s&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;salifetime=3600s&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;pfs=yes&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;auto=start&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;rekey=yes&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;keyingtries=%forever&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dpddelay=10&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dpdtimeout=60&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;dpdaction=restart_by_peer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sources&lt;/p&gt;

&lt;p&gt;Connecting Multiple VPCs with EC2 Instances (IPSec)
https://aws.amazon.com/articles/5472675506466066&lt;/p&gt;

&lt;p&gt;HA NAT:
http://aws.amazon.com/articles/2781451301784570&lt;/p&gt;

&lt;p&gt;Enhanced Networking
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html&lt;/p&gt;
</description>
        <pubDate>Wed, 13 May 2015 21:00:00 -0400</pubDate>
        <link>https://www.websiteops.com/cloud/2015/05/13/connecting-aws-regions-with-openswan/</link>
        <guid isPermaLink="true">https://www.websiteops.com/cloud/2015/05/13/connecting-aws-regions-with-openswan/</guid>
        
        <category>cloud</category>
        
        <category>aws</category>
        
        <category>openswan</category>
        
        
        <category>cloud</category>
        
      </item>
    
      <item>
        <title>True Power of the Cloud</title>
        <description>&lt;p&gt;When comparing the cloud to the old ways, lots of terms are thrown around. ROI, scalibility, rapid development and deployment, ect, ect. The cloud is great for spinning massive amount of infrastructure quickly, but the true power comes with shutting it off. Pay for what you use is the power behind the cloud. Now where I am in the US internet to the home is I pay $XX a month for 50/25MBs. No matter how much I actually use the internet. No given the fact that FIOS really throttles what we can watch anyways. The true limit of how much bandwidth we can consume in a billing period is far lower. Even watch TV from FIOS is artifacted crap.&lt;/p&gt;

&lt;p&gt;But what am I really paying for. Am I paying for 50Mb/s download from everywhere on the internet? Or is it 50Mb/s to Verizon’s switch and from there it is whatever speed Verizon feels like giving you at the time? I’ve never read the fine print on my service contract, but my assumption with home internet has always been you get upto the advertised speed but there is no gaurrenty of speed.&lt;/p&gt;

&lt;p&gt;So what would happen if FIOS gave access to all the bandwidth avaible and I paid per GB that I used in a billing period. For me utilies like water and power work this way. When the power goes out I do not pay for those Watts I do not consume. So when my internet goes out I would not pay for those bits. Well that sounds good, right.
Services like water and power, I do not have a choice on what company I use for these services. There is only one water or power company in my area. When they raise rates I have no choice but to pay. I cannot look at other services. Also each of these utitlies are something we always talk about around conservation. We make a effort to conserve water and power.&lt;/p&gt;

&lt;p&gt;Would we then have to conserve bits?&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Aug 2014 17:45:00 -0400</pubDate>
        <link>https://www.websiteops.com/cloud/2014/08/03/true-power-of-the-cloud/</link>
        <guid isPermaLink="true">https://www.websiteops.com/cloud/2014/08/03/true-power-of-the-cloud/</guid>
        
        <category>cloud</category>
        
        <category>aws</category>
        
        <category>gce</category>
        
        
        <category>cloud</category>
        
      </item>
    
      <item>
        <title>Adding Open Graph Tags to Jekyll</title>
        <description>&lt;p&gt;What is the Open Graph protocol? Per Facebook, it “enables any web page to become a rich object in a social graph.” The documentation goes on to state that “to turn your web pages into graph objects, you need to add basic metadata to your page.” Put more simply, add Open Graph meta tags to your website to have greater control over how your content is displayed when shared via Facebook.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Aug 2014 17:15:00 -0400</pubDate>
        <link>https://www.websiteops.com/web/2014/08/01/adding-open-graph-tags-to-jekyll/</link>
        <guid isPermaLink="true">https://www.websiteops.com/web/2014/08/01/adding-open-graph-tags-to-jekyll/</guid>
        
        <category>jekyllrb</category>
        
        <category>opengraph</category>
        
        <category>facebook</category>
        
        
        <category>web</category>
        
      </item>
    
  </channel>
</rss>
